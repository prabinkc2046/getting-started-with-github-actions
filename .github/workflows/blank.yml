# This workflow automates the deployment of a React application to a production server using GitHub Actions.
# It ensures efficient and reliable deployment processes while providing flexibility for manual triggering.

name: Multi-job workflows

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  # First job
  build:
    runs-on: ubuntu-latest
    steps:

      - name: checkout source code
        uses: actions/checkout@v4
  
      - name: set up node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: building
        run: |
          echo "Changing directory into the project folder"
          cd githubactions
          echo 
          echo "Installing dependencies"
          npm install
          echo
          echo "Building react project"
          npm run build
          echo
          echo "Content of build directory"
          ls build
          echo 


        

  # Test if build is successful
  test:
    runs-on: ubuntu-latest

    needs: build
    steps:
      - name: check out the code
        uses: actions/checkout@v4
      
      - name: set up node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: run test
        run: |
          echo "Changing into project directory"
          cd githubactions
          echo
          echo "Installing dependencies"
          npm install
          echo 
          echo "run test"
          npm test
      
      
  
      # Step 5: Transfer Build Files to Production Server
      # - name: Copy Files via SSH Password
      #   uses: appleboy/scp-action@v0.1.7
      #   with:
      #     host: ${{ secrets.SERVER_IP }}
      #     username: ${{ secrets.USERNAME }}
      #     password: ${{ secrets.PASSWORD }}
      #     port: ${{ secrets.PORT }}
      #     strip_components: 3
      #     source: "./githubactions/build/*"
      #     target: /var/www/html/test
        # This step copies the build files to the production server using SCP, ensuring secure and efficient deployment.

      
