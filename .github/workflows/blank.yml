# This workflow automates the deployment of a React application to a production server using GitHub Actions.

name: React App Deployment

# Triggers the workflow on push or pull request events, specifically for the "main" branch,
# and allows manual triggering from the Actions tab.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy_react_app:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Cache Node Modules
      - name: Cache Node Modules
        uses: actions/cache@v4
        id: cache
        with:
          path: ./githubactions/node_modules
          # Cache key is generated based on OS and hash of package-lock.json
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      
      # Step 3: Execute Deployment Script
      - name: Execute Deployment Script
        run: |
          # Print the contents of the current directory
          echo "Contents of the current directory:"
          ls
          echo

          # Change directory to 'githubactions'
          echo "Changing directory to githubactions..."
          cd githubactions
          echo 

          # Install dependencies using npm
          echo "Installing dependencies..."
          npm install 
          echo

          # Build the React app
          echo "Building React app..."
          npm run build
          echo

          # content of current dir
          echo "Conten of current dir"
          ls 
          echo

          # # Transfer build files to the production server
          # - name: copy file via ssh password
          #   uses: appleboy/scp-action@v0.1.7
          #   with:
          #     host: ${{ secrets.SERVER_IP }}
          #     username: ${{ secrets.USERNAME }}
          #     password: ${{ secrets.PASSWORD }}
          #     port: ${{ secrets.PORT }}
          #     strip_components: 1
          #     source: "build/*"
          #     target: /var/www/html/test
